-- Explanation :

Now, there is a 'series' table that has the same fields as the 'movies' table.


	Series
	------
	serie_id, title, year_released, views, director_id


-- Queries :
	- Recover all series and all movies.
	For those exercises, you have to use UNION

		SELECT title, year_released
		FROM movies
		UNION
		SELECT title, year_released
		FROM series


	- Collect all series and all movies from 2018

		SELECT title, year_released
		FROM movies
		WHERE year_released = '2018'
		UNION
		SELECT title, year_released
		FROM series
		WHERE date_released = '2018'

	- Collect all the series and all the films with the director.

		SELECT director_id, title, year_released
		FROM movies
		UNION
		SELECT director_id, title, year_released
		FROM series

	- Get the number of views per director (movies and series combined).

		SELECT director_id, SUM(views)
		FROM (SELECT director_id, title, views
		FROM movies
		UNION
		SELECT director_id, title, views
		FROM series) 
		GROUP BY director_id



	- Get the total view number for all movies AND all series (movies and separate series).

		SELECT CONCAT('Movies : ', SUM(views)) As Total_Views
		FROM movies
		UNION
		SELECT CONCAT('series : ', SUM(views)) As Total_Views
		FROM series